kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.namespace }}-server
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Values.namespace }}-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: server
    app.kubernetes.io/version: {{ .Values.image.tag }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.namespace }}-server
      app.kubernetes.io/name: server
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: {{ .Values.namespace }}-server
        app.kubernetes.io/name: server
    spec:
      restartPolicy: Always
      serviceAccountName: default
      schedulerName: default-scheduler
      enableServiceLinks: true
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /api/server/ping
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: {{ .Values.namespace }}-server
          livenessProbe:
            httpGet:
              path: /api/server/ping
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: DB_DATABASE_NAME
              value: {{ .Values.postgres.database.name }}
            - name: DB_HOSTNAME
              value: {{ .Values.namespace }}-{{ .Values.postgres.name }}-service
            - name: DB_PASSWORD
              value: {{ .Values.postgres.database.password }}
            - name: DB_USERNAME
              value: {{ .Values.postgres.database.username }}
            - name: IMMICH_MACHINE_LEARNING_URL
              value: 'http://{{ .Values.namespace }}-machine-learning:3003'
            - name: REDIS_HOSTNAME
              value: {{ .Values.namespace }}-{{ .Values.immichredis.name }}-service
            - name: NODE_EXTRA_CA_CERTS
              value: /mnt/certificates/tls.crt
          ports:
            - name: http
              containerPort: 2283
              protocol: TCP
          imagePullPolicy: IfNotPresent
          startupProbe:
            httpGet:
              path: /api/server/ping
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
            - name: rhbk-certs
              mountPath: /mnt/certificates
          terminationMessagePolicy: File
          image: 'ghcr.io/immich-app/immich-server:{{ .Values.image.tag }}'
      automountServiceAccountToken: true
      serviceAccount: default
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: {{ .Values.namespace }}-{{ .Values.postgres.name }}-pvc
        - name: rhbk-certs
          secret:
            secretName: rhbk-cert
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
---
kind: Secret
apiVersion: v1
metadata:
  name: rhbk-cert
  namespace: {{ .Values.namespace }}
data:
  tls.crt: {{ .Values.rhbk.tlscrt }}
  tls.key: {{ .Values.rhbk.tlskey }}
type: kubernetes.io/tls